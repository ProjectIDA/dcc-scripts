Python 3.5 (64-bit)
Preferrably the Continuum Anaconda distribution as it comes with nearly all the required dependencies and support for virtual environemnts through it's conda program.

    - https://www.continuum.io/downloads
    - Then use the conda application to create a Python 3.5 (virtual) environment that will be used to run the IDA calibration software.

In new virtual environment the following packages should be enabled:
    - using conda:
        conda install scipy numpy pandas pyyaml
        conda install obspy -c obspy
        conda install --channel https://conda.anaconda.org/conda-forge pyqt 
            (will possibly downgrade exist v5.6 of Qt. That's what we want. Code not yet modified for use with Qt v5.6 and PyQt5)
    - using pip
        pip install fabulous
    - need to check the tkinter can be imported

The IDA python code has been tested on Linux (RHEL) and OS X. While it should work on recent (>= v8.0) MS Windows, that will require some minor modifications.



Additional binaries required:
    imseed
    idagrep
    gunzip
    qcal (and dependencies for acquiring the RB data)


We'll neeed the RESP file response of he reference sensor, or the poles and zeros response representation

=========================================================
Environment:

ida.utils: i10get() function calls arc_raw_i10_dirs() which assumes <ida_archive_raw_dir>/sta/year/jday directory structure

process_shake: Assumes we have shaketable response and true input motion signal. NOT SURE THIS WILL WORK IN RU. THEY MAY NEED TO HAVE INDEPENDENT WAY OF VERIFYING REF SENSOR RESPONSE.

BY convention:
    All RAW calibration data stored in /ida/cal/raw
        /ida/cal/raw/<sta>/<loc>/<sensor>/<rblf|rbhf>/<yyyy-mm-dd[-.*] - for randon binary HF/LF data
        /ida/cal/raw/<sta>/APSurvey/<yyyy-mm-dd[-.*] - for APSurvey data
        /ida/cal/raw/shaketable  - for shaketable tests

        $IDA_CAL_RAW_DIR = /ida/cal/raw

    Calibration Analysis Results:
        /ida/cal/analysis/<sta>/<loc>/<yyyy-mm-dd> - random binary results
        /ida/cal/analysis/<sta>/APSurvey/<yyyy-mm-dd> - APsurvey results
        /ida/cal/raw/shaketable/<test-dir> - Shaketable results (NOTE: This is kept with the original data )

ENV VARS USED if available:
    SEEDRESP (process_onsite, process_shake)
    IDA_CAL_RAW_DIR (all)
    IDA_CAL_ANALYSIS_DIR (process_cal: publishing only)
    IDA_ARCHIVE_RAW_DIR (process_onsite)
    IDA_RESPONSES_NOM_DIR (process_cal)
    IDA_RESPONSES_CUR_DIR (process_cal)
    IDA_DATASCOPEDB_DIR (process_cal)
==========================================================
RB Cal Analysis
    PAZ files assume sensor ABBREv at start of file names and ipaz extension
    Need list of sensor model 'keys' for ipaz filename recognition and naming and /ida/cal/raw/<sta>/<loc>/<SENSOR KEY> dir structure
    qcal *.log file required in same dir with same name as miniseed data
==========================================================
Shake Table Analyses:

    Each Shake Table data set placed in unique, timestamp+sensorstmped subdir of --cal-raw-dir/--shaketable-subdir (/ida/cal/raw/ + shaketable)
        The name of this subdir is used to name the analysis output plot, miniseed and result files.
        
    Data collected at 40 hz
    Need from Shake table:
        - input signal in counts
        - digi counts per volt
        - shaketable meter per volt
    Need RESP of reference sensor.
    Input signal convoled with RESP, then COH and TF generated and examined for AMP and PHA difference
    channel naming assumption for ms data

===========================================================
APsurvey
    ref_kit_analsys used if there.
===========================================================
Need documentation of structure of config YAML files
Need documentation of IPAZ file format
