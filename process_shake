#!/usr/bin/env python3
#######################################################################################################################
# Copyright (C) 2016  Regents of the University of California
#
# This is free software: you can redistribute it and/or modify it under the terms of the
# GNU General Public License (GNU GPL) as published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# A copy of the GNU General Public License can be found in LICENSE.TXT in the root of the source code repository.
# Additionally, it can be found at http://www.gnu.org/licenses/.
#
# NOTES: Per GNU GPLv3 terms:
#   * This notice must be kept in this source file
#   * Changes to the source must be clearly noted with date & time of change
#
# If you use this software in a product, an explicit acknowledgment in the product documentation of the contribution
# by Project IDA, Institute of Geophysics and Planetary Physics, UCSD would be appreciated but is not required.
#######################################################################################################################

import os
from os.path import join  #, split, isfile
import argparse
#import glob
import sys
from fabulous.color import red, bold

from ida.calibration.shaketable import ShakeConfig


version = '0.1.0'
parser = argparse.ArgumentParser(description="Process compact Trillium shake table data.")
parser.add_argument('config', action="store", default='config',
                    help=__file__ +
                    " configuration file in $IDA_CAL_RAW_DIR/shaketable")
parser.add_argument('-v', '--version', action='version', version=version)
parser.add_argument('-d', '--debug', action='store_true', help='Enabled debug mode for verbose output.')

args = parser.parse_args()

config_name = args.config
if not '.yaml' in args.config:
   config_name = args.config + '.yaml'

subdir = 'shaketable'

if not os.environ.get('IDA_CAL_RAW_DIR'):
    print(red(bold('The env var IDA_CAL_RAW_DIR must be set to the root directory of the raw calibration data.')))
    sys.exit(1)

cfg_dir = join(os.environ['IDA_CAL_RAW_DIR'], subdir)
cfg_fn = join(cfg_dir, config_name)

config = ShakeConfig(cfg_fn, shaketable_subdir=subdir)
if config.ok:
     if not config.read_msfile():
        print(red('Error reading miniseed file: ' + config.ms_filename))
        sys.exit(1)

     if not config.prepare_traces():
        print(red('Could not prepare traces. Quitting.'))
        sys.exit(1)

     config.analyze()

     done = input('Hit enter to exit.')
